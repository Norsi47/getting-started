---
openapi: 3.0.3
info:
  title: Movie APIs
  description: Movie Application
  license:
    name: MIT
    url: http://localhost:8080
  version: 1.0.0
tags:
- name: movies
  description: Movies
- name: Movie Resource
  description: Movie REST API
paths:
  /hello/greeting/{name}:
    get:
      tags:
      - Greeting Resource
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /hello/testingRest:
    get:
      tags:
      - Greeting Resource
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /movies:
    get:
      tags:
      - Movie Resource
      summary: getMovies
      description: Get all movies inside the list
      operationId: getMovies
      responses:
        "200":
          description: Operation Completed
          content:
            application/json: {}
    post:
      tags:
      - Movie Resource
      summary: Create a new Movie
      description: Create a new movie to add inside the list
      operationId: createMovies
      requestBody:
        description: Movie to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
        required: true
      responses:
        "201":
          description: Movie Created
          content:
            application/json: {}
  /movies/size:
    get:
      tags:
      - Movie Resource
      summary: Count Movies
      description: Size of the list of movies
      operationId: countMovies
      responses:
        "200":
          description: Operation Completed
          content:
            text/plain: {}
  /movies/{id}:
    delete:
      tags:
      - Movie Resource
      summary: Delete an existing Movies
      description: Delete a movie inside the list
      operationId: deleteMovies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          description: Movie deleted
          content:
            text/plain: {}
        "400":
          description: Movie not valid
          content:
            application/json: {}
  /movies/{id}/{title}:
    put:
      tags:
      - Movie Resource
      summary: Update existing Movies
      description: Update a movie inside the list
      operationId: updateMovies
      parameters:
      - name: id
        in: path
        description: Movie id
        required: true
        schema:
          format: int64
          type: integer
      - name: title
        in: path
        description: Movie title
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Movie updated
          content:
            text/plain: {}
  /pracMovies:
    get:
      tags:
      - Prac Movie Controller
      responses:
        "200":
          description: OK
    post:
      tags:
      - Prac Movie Controller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PracMovieRequest'
      responses:
        "200":
          description: OK
components:
  schemas:
    Movie:
      description: Movie Representation
      required:
      - title
      type: object
      properties:
        id:
          format: int64
          type: integer
        title:
          type: string
    PracMovieRequest:
      type: object
      properties:
        movieId:
          format: int64
          type: integer
        movieTitle:
          type: string
